import streamlit as st
import pandas as pd
import gspread
from google.oauth2.service_account import Credentials
import matplotlib.pyplot as plt

# ‡πÇ‡∏´‡∏•‡∏î credentials ‡∏à‡∏≤‡∏Å Streamlit Secrets
try:
    SCOPES = ["https://www.googleapis.com/auth/spreadsheets"]
    credentials_info = st.secrets["gcp_service_account"]
    credentials = Credentials.from_service_account_info(credentials_info, scopes=SCOPES)
except KeyError:
    st.error("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• API Key! ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö secrets.toml ‡πÉ‡∏ô Streamlit Cloud")
    st.stop()

# ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Google Sheets
client = gspread.authorize(credentials)

# URL ‡∏Ç‡∏≠‡∏á Google Sheets
SHEET_URL = "https://docs.google.com/spreadsheets/d/1TgmPK6cF2uy1_yuctQQJBgp23hw5M8OD31JQ7AYemjo/edit"

try:
    spreadsheet = client.open_by_url(SHEET_URL)
    sheet = spreadsheet.sheet1
    data = sheet.get_all_records()
except Exception as e:
    st.error(f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Google Sheets: {e}")
    st.stop()

# ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏õ‡πá‡∏ô DataFrame
df = pd.DataFrame(data)

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô" ‡πÅ‡∏•‡∏∞ "‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó" ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
if "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô" not in df.columns or "‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó" not in df.columns:
    st.error("‚ùå ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô Google Sheets ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á! ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô' ‡πÅ‡∏•‡∏∞ '‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó'")
    st.stop()

# ‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç
df["‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô"] = pd.to_numeric(df["‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô"], errors="coerce")

# ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏¢‡∏£‡∏±‡∏ö ‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢ ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠
total_income = df[df["‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó"] == "‡∏£‡∏≤‡∏¢‡∏£‡∏±‡∏ö"]["‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô"].sum()
total_expense = df[df["‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó"] == "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢"]["‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô"].sum()
balance = total_income - total_expense

# ‡∏™‡∏£‡πâ‡∏≤‡∏á Dashboard ‡∏ö‡∏ô Streamlit
st.title("üìä Dashboard ‡∏£‡∏≤‡∏¢‡∏£‡∏±‡∏ö-‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢")
st.metric(label="üí∞ ‡∏£‡∏≤‡∏¢‡∏£‡∏±‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î", value=f"{total_income:,.2f} ‡∏ö‡∏≤‡∏ó")
st.metric(label="üìâ ‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î", value=f"{total_expense:,.2f} ‡∏ö‡∏≤‡∏ó")
st.metric(label="üìå ‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠", value=f"{balance:,.2f} ‡∏ö‡∏≤‡∏ó")

# ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
st.dataframe(df)

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏£‡∏≤‡∏ü
fig, ax = plt.subplots()
df.groupby("‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó")["‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô"].sum().plot(kind="bar", ax=ax, color=["green", "red"])
st.pyplot(fig)
